"use strict";
exports.id = 378;
exports.ids = [378];
exports.modules = {

/***/ 2378:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "q": () => (/* binding */ projects)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(997);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);

const projects = [
    {
        title: "OCR",
        lang: "pytorch",
        content: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: [
                "Text Recognition - based on",
                " ",
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("a", {
                    className: "text-blue-700",
                    href: "https://github.com/clovaai/deep-text-recognition-benchmark",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: "TPS-ResNet-BiLSTM-Attn"
                }),
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("br", {}),
                "Text Detection - based on",
                " ",
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("a", {
                    className: "text-blue-700",
                    href: "https://github.com/clovaai/CRAFT-pytorch",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: "CRAFT"
                }),
                " ",
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("br", {}),
                "Doc layout analysis - based on",
                " ",
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("a", {
                    className: "text-blue-700",
                    href: "https://arxiv.org/abs/2012.14740",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: "LayoutLMv2"
                }),
                ", ",
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("a", {
                    className: "text-blue-700",
                    href: "https://arxiv.org/abs/2104.08836",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: "LayoutXLM"
                }),
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("br", {}),
                "I developed OCR module of RPA(Robotic Process Automation) on my own for a company for 6 months. Trained by data generated by custom text recognition data generator and many other public datasets."
            ]
        })
    },
    {
        title: "Smart Contracts",
        lang: "solidity",
        content: /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: "Decentralized program on the ethereum blockchain. I made an anonymous chat app and ERC-20 token (supports minting and more functions)."
        })
    },
    {
        title: "Trading assistant",
        lang: "python",
        content: /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: "Fetches data from binance api and tradingview, and shows customized indicators. Displays risk of current portfolio and calculates proper amount of each trade."
        })
    },
    {
        title: "Virtual display AR app",
        lang: "swift",
        content: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: [
                " ",
                "Displays a virtual screen right next to a real monitor. Every time launched, the app loads saved world data of my room. (Showing actual content work in progress.)"
            ]
        })
    },
    {
        title: "Medical report generation",
        lang: "pytorch",
        content: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: [
                " ",
                "Team project from CS470 course. Image-to-text model trained by a diagnostic report for each medical image. Beyond reimplementing",
                " ",
                /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("a", {
                    className: "text-blue-700",
                    href: "https://arxiv.org/abs/2010.10042",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: "baseline paper"
                }),
                ", we analyzed how the results change depending on the two rewards (which encourage the factual completeness and consistency) and other models."
            ]
        })
    },
    {
        title: "Home server",
        lang: "",
        content: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: [
                " ",
                "Ubuntu server on raspberry pi. Uses next.js, homeassistant (api), traefik, pihole, wireguard.",
                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul", {
                    children: [
                        /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("li", {
                            children: "- Dashboard that shows iot devices and server status"
                        }),
                        /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("li", {
                            children: "- Control page of home resources"
                        }),
                        /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx("li", {
                            children: "- VPN to connect home network from outside"
                        })
                    ]
                })
            ]
        })
    },
    {
        title: "This homepage",
        lang: "nextjs, tailwind",
        content: /*#__PURE__*/ react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
            children: "Deployed by github pages and vercel."
        })
    }, 
];


/***/ })

};
;